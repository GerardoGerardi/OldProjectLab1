Index: Maze/Cells/Heart.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Maze.LevelStaff;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Maze.Cells\n{\n    public class Heart : BaseCell\n    {\n        public override string Symbol => \"♥\";\n\n        public Heart(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)\n        {\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/Cells/Heart.cs b/Maze/Cells/Heart.cs
--- a/Maze/Cells/Heart.cs	
+++ b/Maze/Cells/Heart.cs	
@@ -4,15 +4,24 @@
 using System.Linq;
 using System.Text;
 using System.Threading.Tasks;
+using Maze.Cells.Creatures;
 
 namespace Maze.Cells
 {
     public class Heart : BaseCell
     {
         public override string Symbol => "♥";
+        
 
         public Heart(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)
         {
         }
+        
+        public override bool Step(BaseCreature creature)
+        {
+            creature.Hp += 5;
+            return true;
+
+        }
     }
 }
Index: Maze/Cells/Diamond.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Maze.Cells.Creatures;\nusing Maze.LevelStaff;\n\nnamespace Maze.Cells\n{\n    internal class Diamond: BaseCell \n    {\n        public Diamond(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)\n        {\n        }\n\n        public override string Symbol => \"@\";\n\n        public override bool Step(BaseCreature creature)\n        {\n            creature.Money += 10;\n            return true;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/Cells/Diamond.cs b/Maze/Cells/Diamond.cs
--- a/Maze/Cells/Diamond.cs	
+++ b/Maze/Cells/Diamond.cs	
@@ -3,8 +3,9 @@
 
 namespace Maze.Cells
 {
-    internal class Diamond: BaseCell 
+    internal class Diamond: BaseCell
     {
+        private Level _level;
         public Diamond(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)
         {
         }
Index: Maze/Cells/Berry.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Maze.Cells.Creatures;\nusing Maze.LevelStaff;\n\nnamespace Maze.Cells\n{\n    public class Berry : BaseCell\n    {\n        public Berry(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)\n        {\n        }\n\n        public override string Symbol => \"@\";\n\n        public override bool Step(BaseCreature creature)\n        {\n            creature.Hp++;\n            return true;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/Cells/Berry.cs b/Maze/Cells/Berry.cs
--- a/Maze/Cells/Berry.cs	
+++ b/Maze/Cells/Berry.cs	
@@ -5,16 +5,20 @@
 {
     public class Berry : BaseCell
     {
+        
         public Berry(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)
         {
         }
 
         public override string Symbol => "@";
-
+       
         public override bool Step(BaseCreature creature)
         {
+           
             creature.Hp++;
             return true;
         }
+       
+        
     }
 }
Index: Maze/Cells/Chest.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Maze.Cells.Creatures;\nusing Maze.LevelStaff;\n\nnamespace Maze.Cells\n{\n    internal class Chest : BaseCell\n    {\n        public Chest(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)\n        {\n        }\n\n        public override string Symbol => \"4\"; //Symbol 4 = [Ch]est\n\n        public override bool Step(BaseCreature creature)\n        {\n            return false;\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/Cells/Chest.cs b/Maze/Cells/Chest.cs
--- a/Maze/Cells/Chest.cs	
+++ b/Maze/Cells/Chest.cs	
@@ -16,4 +16,4 @@
             return false;
         }
     }
-}
\ No newline at end of file
+}    
\ No newline at end of file
Index: Maze/LevelStaff/LevelDrawer.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>namespace Maze.LevelStaff\n{\n    public class LevelDrawer\n    {\n        public void Draw(Level level)\n        {\n            foreach (var cell in level.Cells)\n            {\n                Console.SetCursorPosition(cell.CoordinateX, cell.CoordinateY);\n                Console.Write(cell.Symbol);\n            }\n\n            Console.SetCursorPosition(level.Hero.CoordinateX, level.Hero.CoordinateY);\n            Console.Write(level.Hero.Symbol);\n\n            //Console.ReadLine();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/LevelStaff/LevelDrawer.cs b/Maze/LevelStaff/LevelDrawer.cs
--- a/Maze/LevelStaff/LevelDrawer.cs	
+++ b/Maze/LevelStaff/LevelDrawer.cs	
@@ -1,18 +1,23 @@
+using Maze.Cells.Creatures;
+
 namespace Maze.LevelStaff
 {
     public class LevelDrawer
     {
+       
         public void Draw(Level level)
         {
+           
             foreach (var cell in level.Cells)
             {
+                Console.WriteLine();
                 Console.SetCursorPosition(cell.CoordinateX, cell.CoordinateY);
                 Console.Write(cell.Symbol);
             }
-
+            
             Console.SetCursorPosition(level.Hero.CoordinateX, level.Hero.CoordinateY);
             Console.Write(level.Hero.Symbol);
-
+            
             //Console.ReadLine();
         }
     }
Index: Maze/Cells/Secret.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Maze.LevelStaff;\n\nnamespace Maze.Cells\n{\n    internal class Secret : BaseCell\n    {\n        public Secret(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)\n        {\n        }\n\n        public override string Symbol => \"?\";\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/Cells/Secret.cs b/Maze/Cells/Secret.cs
--- a/Maze/Cells/Secret.cs	
+++ b/Maze/Cells/Secret.cs	
@@ -1,3 +1,4 @@
+using Maze.Cells.Creatures;
 using Maze.LevelStaff;
 
 namespace Maze.Cells
@@ -9,5 +10,11 @@
         }
 
         public override string Symbol => "?";
+        public override bool Step(BaseCreature creature)
+        {
+            creature.Money++;
+            return true;
+        }
+        
     }
 }
\ No newline at end of file
Index: Maze/Cells/Ring.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Maze.LevelStaff;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Maze.Cells\n{\n    public class Ring : BaseCell\n    {\n        public Ring(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)\n        {\n        }\n\n        public override string Symbol => \"o\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/Cells/Ring.cs b/Maze/Cells/Ring.cs
--- a/Maze/Cells/Ring.cs	
+++ b/Maze/Cells/Ring.cs	
@@ -4,6 +4,7 @@
 using System.Linq;
 using System.Text;
 using System.Threading.Tasks;
+using Maze.Cells.Creatures;
 
 namespace Maze.Cells
 {
@@ -14,5 +15,10 @@
         }
 
         public override string Symbol => "o";
+        public override bool Step(BaseCreature creature)
+        {
+            creature.Hp++;
+            return true;
+        }
     }
 }
Index: Maze/Cells/Moon.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Maze.LevelStaff;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Maze.Cells\n{\n    public class Moon : BaseCell\n    {\n        public Moon(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)\n        {\n        }\n\n        public override string Symbol => \")\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/Cells/Moon.cs b/Maze/Cells/Moon.cs
--- a/Maze/Cells/Moon.cs	
+++ b/Maze/Cells/Moon.cs	
@@ -4,6 +4,7 @@
 using System.Linq;
 using System.Text;
 using System.Threading.Tasks;
+using Maze.Cells.Creatures;
 
 namespace Maze.Cells
 {
@@ -14,5 +15,10 @@
         }
 
         public override string Symbol => ")";
+        public override bool Step(BaseCreature creature)
+        {
+            creature.Money++;
+            return true;
+        }
     }
 }
Index: Maze/Cells/Fountain.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Maze.LevelStaff;\n\nnamespace Maze.Cells;\n\npublic class Fountain : BaseCell\n{\n    public Fountain(int coordinateX, int coordinateY, Level level) : base(coordinateX, coordinateY, level)\n    {\n    }\n\n    public override string Symbol => \"@\";\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Maze/Cells/Fountain.cs b/Maze/Cells/Fountain.cs
--- a/Maze/Cells/Fountain.cs	
+++ b/Maze/Cells/Fountain.cs	
@@ -1,3 +1,4 @@
+using Maze.Cells.Creatures;
 using Maze.LevelStaff;
 
 namespace Maze.Cells;
@@ -9,4 +10,9 @@
     }
 
     public override string Symbol => "@";
+    public override bool Step(BaseCreature creature)
+    {
+        creature.Hp--;
+        return true;
+    }
 }
\ No newline at end of file
Index: .idea/.idea.Net14Online/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoGeneratedRunConfigurationManager\">\n    <projectFile>Maze/Maze.csproj</projectFile>\n    <projectFile>Net14OnlineConsole/Net14OnlineConsole.csproj</projectFile>\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"7a62691b-0334-4537-aa2b-dfc4581283f1\" name=\"Changes\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2Z4U79BQbAFhEOED6yCYl7WSkCw\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  },\n  \"keyToStringList\": {\n    \"rider.external.source.directories\": [\n      \"/Users/antonkupalov/Library/Application Support/JetBrains/Rider2022.3/resharper-host/DecompilerCache\",\n      \"/Users/antonkupalov/Library/Application Support/JetBrains/Rider2022.3/resharper-host/SourcesCache\",\n      \"/Users/antonkupalov/.local/share/Symbols/src\"\n    ]\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\".NET Project.Maze\">\n    <configuration name=\"Maze\" type=\"DotNetProject\" factoryName=\".NET Project\">\n      <option name=\"EXE_PATH\" value=\"\" />\n      <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\n      <option name=\"USE_MONO\" value=\"0\" />\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\n      <option name=\"PROJECT_PATH\" value=\"$PROJECT_DIR$/Maze/Maze.csproj\" />\n      <option name=\"PROJECT_EXE_PATH_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_ARGUMENTS_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_WORKING_DIRECTORY_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_KIND\" value=\"DotNetCore\" />\n      <option name=\"PROJECT_TFM\" value=\"\" />\n      <method v=\"2\">\n        <option name=\"Build\" />\n      </method>\n    </configuration>\n    <configuration name=\"Net14OnlineConsole\" type=\"DotNetProject\" factoryName=\".NET Project\">\n      <option name=\"EXE_PATH\" value=\"\" />\n      <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\n      <option name=\"USE_MONO\" value=\"0\" />\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\n      <option name=\"PROJECT_PATH\" value=\"$PROJECT_DIR$/Net14OnlineConsole/Net14OnlineConsole.csproj\" />\n      <option name=\"PROJECT_EXE_PATH_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_ARGUMENTS_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_WORKING_DIRECTORY_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_KIND\" value=\"DotNetCore\" />\n      <option name=\"PROJECT_TFM\" value=\"\" />\n      <method v=\"2\">\n        <option name=\"Build\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"7a62691b-0334-4537-aa2b-dfc4581283f1\" name=\"Changes\" comment=\"\" />\n      <created>1701680675708</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1701680675708</updated>\n      <workItem from=\"1701680676963\" duration=\"352000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"NUnit\" />\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.Net14Online/.idea/workspace.xml b/.idea/.idea.Net14Online/.idea/workspace.xml
--- a/.idea/.idea.Net14Online/.idea/workspace.xml	
+++ b/.idea/.idea.Net14Online/.idea/workspace.xml	
@@ -5,12 +5,31 @@
     <projectFile>Net14OnlineConsole/Net14OnlineConsole.csproj</projectFile>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7a62691b-0334-4537-aa2b-dfc4581283f1" name="Changes" comment="" />
+    <list default="true" id="b6857001-0b5a-4cf8-851c-5714cbb9ccee" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/.idea.Net14Online/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Net14Online/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/Cells/Berry.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/Cells/Berry.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/Cells/Chest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/Cells/Chest.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/Cells/Diamond.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/Cells/Diamond.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/Cells/Fountain.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/Cells/Fountain.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/Cells/Heart.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/Cells/Heart.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/Cells/Moon.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/Cells/Moon.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/Cells/Ring.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/Cells/Ring.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/Cells/Secret.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/Cells/Secret.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/ConsolePlay/ConsoleController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/ConsolePlay/ConsoleController.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Maze/LevelStaff/LevelDrawer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Maze/LevelStaff/LevelDrawer.cs" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$/.." value="main" />
+      </map>
+    </option>
+  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -19,22 +38,22 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "settings.editor.selected.configurable": "preferences.pluginManager",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   },
-  "keyToStringList": {
-    "rider.external.source.directories": [
-      "/Users/antonkupalov/Library/Application Support/JetBrains/Rider2022.3/resharper-host/DecompilerCache",
-      "/Users/antonkupalov/Library/Application Support/JetBrains/Rider2022.3/resharper-host/SourcesCache",
-      "/Users/antonkupalov/.local/share/Symbols/src"
+  &quot;keyToStringList&quot;: {
+    &quot;rider.external.source.directories&quot;: [
+      &quot;/Users/antonkupalov/Library/Application Support/JetBrains/Rider2022.3/resharper-host/DecompilerCache&quot;,
+      &quot;/Users/antonkupalov/Library/Application Support/JetBrains/Rider2022.3/resharper-host/SourcesCache&quot;,
+      &quot;/Users/antonkupalov/.local/share/Symbols/src&quot;
     ]
   }
-}]]></component>
+}</component>
   <component name="RunManager" selected=".NET Project.Maze">
     <configuration name="Maze" type="DotNetProject" factoryName=".NET Project">
       <option name="EXE_PATH" value="" />
@@ -76,12 +95,14 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="7a62691b-0334-4537-aa2b-dfc4581283f1" name="Changes" comment="" />
+      <changelist id="b6857001-0b5a-4cf8-851c-5714cbb9ccee" name="Changes" comment="" />
       <created>1701680675708</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1701680675708</updated>
       <workItem from="1701680676963" duration="352000" />
+      <workItem from="1701791730850" duration="5192000" />
+      <workItem from="1701849794699" duration="5386000" />
     </task>
     <servers />
   </component>
